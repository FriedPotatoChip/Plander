<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.bit.mapper.AdminMapper">

	<!-- 회원List -->
	<select id="getUserList" resultType="com.bit.domain.UsersVO"
		parameterType="com.bit.utils.PagingVO">
		<![CDATA[
		select *    
    		from (select rownum rn, u_idx, id, name, phone, email, rank, regdate, zipno, roadAddrPart1, addrDetail from users order by u_idx)
    		where rn between #{start} and #{end}
    		
    	]]>
	</select>

	<select id="getSearchList" resultType="com.bit.domain.UsersVO"
		parameterType="map">
		select *
		from (
		select rownum rn, u_idx, id, name, phone, email, rank,
		regdate, zipno,
		roadAddrPart1, addrDetail
		from users
		where
		<choose>
			<when test="target == 'id'.toString()">
				id like '%' || #{keyword} || '%'
			</when>

			<when test="target == 'name'.toString()">
				name like '%' || #{keyword} || '%'
			</when>
		</choose>
		)
		where rn between #{start} and #{end}
	</select>

	<select id="getSearchTotal" resultType="int" parameterType="map">
		select count(*) from users where
		<choose>
			<when test="target == 'id'.toString()">
				id like '%' || #{keyword} || '%'
			</when>

			<when test="target == 'name'.toString()">
				name like '%' || #{keyword} || '%'
			</when>
		</choose>
	</select>

	<!-- 전체 회원 수 -->
	<select id="getTotal" resultType="int">
		SELECT count(*) FROM USERS
	</select>

	<!-- 예약된 사물함 -->
	<select id="bookingCabinet"
		resultType="com.bit.domain.BookingCbVO">
		select *
		from booking_cb bc, cabinet c
		where c.cb_idx =
		bc.cb_idx
		and sysdate between bc.start_date and end_date
		and br_idx=
		#{br_idx}
	</select>

	<!-- 예약된 사물함 수 -->
	<select id="bookingCabinet_count" resultType="int">
		select
		count(bc.ckb_idx)
		from booking_cb bc, cabinet c
		where c.cb_idx =
		bc.cb_idx
		and sysdate between bc.start_date and end_date
		and br_idx=
		#{br_idx}
	</select>

	<!-- 회원삭제 -->
	<delete id="userDelete" parameterType="int">
		delete from users
		where
		u_idx = #{u_idx}
	</delete>

	<!-- 좌석별 현황 -->
	<select id="BookingSeats" resultType="com.bit.domain.BookingVO">
		select distinct b.id, b.start_time, b.end_time, s.s_col, b.bk_idx
		from
		seats_view s, booking b
		where s.s_idx = b.s_idx
		and br_idx = #{br_idx}
		and roomnum = #{roomnum}
		<!-- and s_col = #{s_col} -->
		and (
		(to_char(start_time, 'YYYYMM') = to_char(sysdate, 'YYYYMM') and
		to_char(end_time,
		'YYYYMM') = to_char(sysdate, 'YYYYMM'))
		or
		(to_char(start_time, 'YYYYMM') = to_char(sysdate, 'YYYYMM') and
		to_char(end_time,
		'YYYYMM') = to_char(add_months(sysdate, 1),
		'YYYYMM'))
		or
		(to_char(start_time, 'YYYYMM') =
		to_char(add_months(sysdate, -1), 'YYYYMM') and
		to_char(end_time,
		'YYYYMM') = to_char(sysdate, 'YYYYMM'))
		)
	</select>

	<!-- 좌석이동 -->
	<update id="changeSeats" parameterType="Map">
		<!-- update ( select b.s_idx as s_idx from booking b, seats s where b.s_idx 
			= s.s_idx and b.id = #{id} and s.br_idx = #{br_idx} and b.start_time = to_date(#{start_time}, 
			'YYYY-MM-DD HH24:MI:SS') and b.end_time = to_date(#{end_time}, 'YYYY-MM-DD 
			HH24:MI:SS') ) set s_idx = #{s_idx} -->
		update booking
		set s_idx = #{s_idx}
		where bk_idx = #{bk_idx}
	</update>

	<!-- 결제내역 -->
	<select id="receiptList" resultType="com.bit.domain.BookingVO"
		parameterType="com.bit.utils.PagingVO">
		<![CDATA[
		select *
		    from (select rownum rn, u.name, b.price, p.receipt 
		        from users u, booking b, payment p
		        where u.id = b.id
		        and p.bk_idx = b.bk_idx)
		    where rn between #{start} and #{end}
    	]]>
	</select>

	<!-- 결제내역 검색 후 리스트출력 -->
	<select id="getListSearch" resultType="com.bit.domain.BookingVO"
		parameterType="map">
		select *
		from (
		select rownum rn, p.p_idx, b.id, bk_regdate, price,
		p.payment, s.s_col,
		s.br_idx
		from booking b, payment p, seats s
		where
		p.bk_idx = b.bk_idx
		and s.s_idx = b.s_idx
		and
		<choose>
			<when test="target == 'id'.toString()">
				id like '%' || #{keyword} || '%'
			</when>

			<when test="target == 'p_idx'.toString()">
				p_idx like '%' || #{keyword} || '%'
			</when>

			<when test="target == 'payment'.toString()">
				payment like '%' || #{keyword} || '%'
			</when>
		</choose>
		)
		where rn between #{start} and #{end}
	</select>

	<!-- 총 결제내역 -->
	<select id="receiptTotal" resultType="int">
		select count(*)
		from booking
		b, payment p, seats s
		where p.bk_idx = b.bk_idx
		and s.s_idx = b.s_idx
	</select>

	<!-- 총 결제금액 -->
	<select id="receiptSum" resultType="int">
		select NVL(sum(price), 0)
		from booking
		b, payment p, seats s
		where p.bk_idx = b.bk_idx
		and s.s_idx = b.s_idx
	</select>

	<select id="getTotalSearch" resultType="int" parameterType="map">
		select count(*) from booking b, payment p, seats s
		where p.bk_idx =
		b.bk_idx
		and s.s_idx = b.s_idx
		and
		<choose>
			<when test="target == 'id'.toString()">
				id like '%' || #{keyword} || '%'
			</when>

			<when test="target == 'p_idx'.toString()">
				p_idx like '%' || #{keyword} || '%'
			</when>

			<when test="target == 'payment'.toString()">
				payment like '%' || #{keyword} || '%'
			</when>
		</choose>
	</select>

	<!-- 받은쪽지 갯수 -->
	<select id="recvMsgCnt" resultType="int">
		select count(*)
		from recv_msg
		where recv_id = 'admin'
	</select>

	<!-- 받은쪽지 -->
	<select id="recvMsg" resultType="com.bit.domain.RecvMsgVO"
		parameterType="Map">
		select *
		from (
		select rownum rn, m.*
		from recv_msg m where
		recv_id = 'admin'
		order by rm_idx desc
		)
		where rn
		between #{start} and
		#{end}
	</select>

	<!-- 보낸쪽지 갯수 -->
	<select id="sendMsgCnt" resultType="int">
		select count(*)
		from send_msg
		where send_id = 'admin'
	</select>

	<!-- 보낸쪽지 -->
	<select id="sendMsg" resultType="com.bit.domain.SendMsgVO"
		parameterType="Map">
		select * from (
		select rownum rn, m.*
		from send_msg m
		where send_id =
		'admin'
		order by sm_idx desc
		)
		where rn between
		#{start}
		and #{end}
	</select>

	<!-- 지점A 현 시각 이용률 -->
	<select id="chartA" resultType="double">
		select ROUND((count(*) * 100) /
		65, 2)
		from booking b, seats_view s
		WHERE s.s_idx = b.s_idx
		and s.br_idx = 1
		and sysdate between start_time and end_time
	</select>

	<!-- 지점B 현 시각 이용률 -->
	<select id="chartB" resultType="double">
		select ROUND((count(*) * 100) /
		65, 2)
		from booking b, seats_view s
		WHERE s.s_idx = b.s_idx
		and s.br_idx = 2
		and sysdate between start_time and end_time
	</select>

	<!-- 지점C 현 시각 이용률 -->
	<select id="chartC" resultType="double">
		select ROUND((count(*) * 100) /
		65, 2)
		from booking b, seats_view s
		WHERE s.s_idx = b.s_idx
		and s.br_idx= 3
		and sysdate between start_time and end_time
	</select>
	
	<!-- 해당월 요일별 예약횟수 -->
	<!-- 월요일  -->
	<select id="monday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 2 or to_char(end_time, 'd') = 2)
	</select>
	
	<!-- 화요일  -->
	<select id="Tuesday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 3 or to_char(end_time, 'd') = 3)
	</select>
	
	<!-- 수요일  -->
	<select id="Wednesday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 4 or to_char(end_time, 'd') = 4)
	</select>
	
	<!-- 목요일  -->
	<select id="Thursday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 5 or to_char(end_time, 'd') = 5)
	</select>
	
	<!-- 금요일  -->
	<select id="Friday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 6 or to_char(end_time, 'd') = 6)
	</select>
	
	<!-- 토요일  -->
	<select id="Saturday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 7 or to_char(end_time, 'd') = 7)
	</select>
	
	<!-- 일요일  -->
	<select id="Sunday" resultType="int">
		select count(*)
		    from booking
		    where to_char(sysdate, 'YYYYMMDD') between to_char(start_time, 'YYYYMMDD') and to_char(end_time, 'YYYYMMDD')
		    and (to_char(start_time, 'd') = 1 or to_char(end_time, 'd') = 1)
	</select>
	
	<!-- s_col -> s_idx -->
	<select id="s_idx" resultType="int" parameterType="map">
		select s_idx
		    from seats_view 
		    where s_col = #{s_col}
		    and br_idx = #{br_idx}
	</select>
</mapper>



