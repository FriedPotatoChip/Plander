<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.bit.mapper.BoardMapper">
		
		<!-- RECRUIT 전체 조회 -->
		<select id="getList" resultType="com.bit.domain.RecruitVO">
		<![CDATA[
			SELECT /*+ INDEX_DESC (RECRUIT RECRUIT_PK) */
			* FROM RECRUIT
		]]>
		</select>
		
		<!-- 페이징 처리 후 조회 -->
		<select id="getListPage" resultType="com.bit.domain.BoardVO" parameterType="map">
			SELECT * FROM (
							SELECT ROWNUM RN, B.*, CNT
							FROM BOARD B LEFT OUTER JOIN (SELECT B_IDX, COUNT(*) CNT FROM COMMENTS GROUP BY B_IDX) C
							ON B.B_IDX = C.B_IDX
							WHERE CT_IDX = #{ct_idx}
							ORDER BY B.B_IDX DESC
						  )
			WHERE RN BETWEEN #{start} AND #{end}
		</select>
		
		<!-- 검색기능 -->
		<select id="getSearchList" resultType="com.bit.domain.BoardVO" parameterType="map">
			SELECT * FROM (
							SELECT ROWNUM RN, B.*, CNT
							FROM BOARD B LEFT OUTER JOIN (SELECT B_IDX, COUNT(*) CNT FROM COMMENTS GROUP BY B_IDX) C
							ON B.B_IDX = C.B_IDX
							WHERE CT_IDX = #{ct_idx}
							AND
							<choose>
								<when test="target == 't'.toString()">
									B_TITLE LIKE '%'||#{keyword}||'%'
								</when>
								<when test="target == 'c'.toString()">
									B_CONTENT LIKE '%'||#{keyword}||'%'
								</when>
								<when test="target == 'tc'.toString()">
									(B_TITLE LIKE '%'||#{keyword}||'%' OR
									B_CONTENT LIKE '%'||#{keyword}||'%')
								</when>
								<when test="target == 'w'.toString()">
									ID LIKE '%'||#{keyword}||'%'
								</when>
							</choose>
							ORDER BY B.B_IDX DESC
						  )
			WHERE RN BETWEEN #{start} AND #{end}
		</select>
		
		<!-- 검색 총 게시글 수 -->
		<select id="getSearchTotal" resultType="int" parameterType="map">
			SELECT COUNT(*) FROM BOARD WHERE
			<choose>
				<when test="target == 't'.toString()">
					B_TITLE LIKE '%'||#{keyword}||'%'
				</when>
				<when test="target == 'c'.toString()">
					B_CONTENT LIKE '%'||#{keyword}||'%'
				</when>
				<when test="target == 'tc'.toString()">
					(B_TITLE LIKE '%'||#{keyword}||'%' OR
					B_CONTENT LIKE '%'||#{keyword}||'%')
				</when>
				<when test="target == 'w'.toString()">
					ID LIKE '%'||#{keyword}||'%'
				</when>
			</choose>
		</select>
		
		<!-- 게시판 insert -->
		<insert id="insertBoard" parameterType="com.bit.domain.BoardVO">
		
			<selectKey keyProperty="b_idx" order="BEFORE" resultType="int">
				SELECT BOARD_SEQ.NEXTVAL FROM DUAL
			</selectKey>
			INSERT INTO BOARD (B_IDX, B_TITLE, B_CONTENT, ID, CT_IDX)
						VALUES (#{b_idx}, #{b_title}, #{b_content}, #{id}, #{ct_idx})
		</insert>
		
		<!-- 조회수 +1 -->
		<update id="updateHit" parameterType="int">
			UPDATE BOARD SET HIT = HIT+1 WHERE B_IDX = #{b_idx}
		</update>
		
		<!-- 글 상세 조회 -->
		<select id="getOne" resultType="com.bit.domain.BoardVO">
			SELECT * FROM BOARD WHERE B_IDX = #{b_idx}
		</select>
		
		<!-- 전체 글 갯수 조회 -->
		<select id="getTotal" resultType="int">
			SELECT COUNT(*) FROM BOARD WHERE CT_IDX = #{ct_idx}
		</select>
		
		
				<!-- 페이징 처리 댓글 출력 -->
		<select id="getCommList" resultType="com.bit.domain.CommentsVO" parameterType="map">
		SELECT * FROM (
						SELECT ROWNUM RN, LEVEL, C.* 
						FROM COMMENTS C 
						WHERE B_IDX = #{b_idx}
						START WITH RP_IDX IS NULL 
						CONNECT BY PRIOR C_IDX = RP_IDX 
						ORDER SIBLINGS BY C_IDX ASC
					   )
				  WHERE RN BETWEEN #{start} AND #{end}
		</select>
		
		<!-- 모집글 전체 댓글 갯수 -->
		<select id="cntCommAll" resultType="int" parameterType="int">
			SELECT COUNT(*) FROM COMMENTS WHERE B_IDX = #{b_idx}
		</select>

		<!-- 모집글 댓글 등록 -->
		<insert id="insertComm" parameterType="com.bit.domain.CommentsVO">
			INSERT INTO COMMENTS (C_IDX, C_CONTENT, ID, B_IDX)
						VALUES (COMMENTS_SEQ.NEXTVAL, #{c_content}, #{id}, #{b_idx})
		</insert>
		
		<!-- 모집글 대댓글 등록 -->
		<insert id="insertReplyComm" parameterType="com.bit.domain.CommentsVO">
			INSERT INTO COMMENTS (C_IDX, C_CONTENT, ID, B_IDX, RP_IDX)
						VALUES (COMMENTS_SEQ.NEXTVAL, #{c_content}, #{id}, #{b_idx}, #{rp_idx})
		</insert>
		
		
		<!-- 댓글 삭제 -->
		<delete id="deleteComm" parameterType="int">
			DELETE FROM COMMENTS WHERE C_IDX = #{c_idx}
		</delete>
		<!-- 해당 댓글에 대댓글 있는지 조회 -->
		<select id="cntReplyComm" resultType="int" parameterType="map">
			SELECT COUNT(*) FROM COMMENTS WHERE B_IDX = #{b_idx} AND RP_IDX = #{rp_idx}
		</select>
		<!-- 대댓글이 달린 경우 내용 처리 -->
		<update id="updateDeleteComm" parameterType="int">
			UPDATE COMMENTS SET C_CONTENT = '[삭제된 댓글입니다.]', DEL = 1 WHERE C_IDX = #{c_idx}
		</update>
		<!-- 댓글 수정 -->
		<update id="updateComm" parameterType="com.bit.domain.CommentsVO">
			UPDATE COMMENTS SET C_CONTENT = #{c_content} WHERE C_IDX = #{c_idx}
		</update>
		
		
		
		
		
		
		
		
		
		
		
				
		
		<!-- 모집글 수정 -->
		<update id="updateRec" parameterType="com.bit.domain.RecruitVO">
			UPDATE BOARD SET B_TITLE = #{b_title}, B_CONTENT = #{b_content} WHERE B_IDX = #{b_idx}
		</update>
		
		
		
		
		
		
		<!-- 모집글 삭제 -->
		<delete id="deleteRec" parameterType="int">
			DELETE FROM BOARD WHERE B_IDX = #{b_idx}
		</delete>
		
		
		
		
		
		
		
		 

		
</mapper>



